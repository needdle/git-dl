#!/bin/sh

usage() {
    echo "usage: git dl pb num_threads"
    echo
}

cmd_pb() {
    if [ "$#" -lt 4 ]; then
        get_pb $1 $2 $3; exit 0
    elif [ "$#" -eq 1 ]; then
        if [ $1 == "help" ]; then
            usage; exit 0
        fi
    fi
    usage; exit 1
}

## generating the protobuf representation in parallel
## here $1 is the name of the protobuf file to output
## $2 is the number of parallel threads
get_pb() {
	if [ "${1/.pb/}" != "$1" ]; then
		if [ -f "/usr/local/share/git.proto" ]; then
			fast -d $1
			return
		fi
	elif [ "${1/\.\./}" != "$1" ]; then # has .. in the first argument
		tag=$1
		shift
		git dl log $tag
	elif [ "${1/.log/}" != "$1" ]; then # has .. in the first argument
		log=$1
		shift
		cat $log | gitlog -p $1 $2
		parallel --joblog /tmp/log --progress -j$2 --plus "cat {} | gitlog $3 {/.log/}" ::: $1-*.log
		catlog $1-*.pb $1.pb
		rm -f $1-*.log $1-*.pb
	elif [ "$2" -lt 2 ]; then
		## sequential
		git dl log | gitlog $1
		rm -f $1.log
	else
		git dl log | gitlog -p $1 $2
		parallel --joblog /tmp/log --progress -j$2 --plus "cat {} | gitlog $3 {/.log/}" ::: $1-*.log
		catlog $1-*.pb $1.pb
		rm -f $1-*.log $1-*.pb
	fi
}
